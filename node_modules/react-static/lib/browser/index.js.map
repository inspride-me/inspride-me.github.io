{"version":3,"sources":["../../src/browser/index.js"],"names":["routeInfoByPath","routeErrorByPath","sharedDataByHash","inflightRouteInfo","inflightPropHashes","requestPool","concurrency","Number","process","env","REACT_STATIC_PREFETCH_RATE","plugins","templates","templateUpdated","cb","templateIndexByPath","templatesByPath","templateErrorByPath","registerTemplates","tmps","splice","Infinity","init","REACT_STATIC_ENV","io","require","run","axios","get","port","data","socket","on","console","log","type","reloadRouteData","error","REACT_STATIC_DISABLE_PRELOAD","startPreloader","document","els","slice","call","getElementsByTagName","forEach","el","href","getAttribute","prefetch","setInterval","REACT_STATIC_PRELOAD_POLL_INTERVAL","registerTemplateForPath","path","index","part","Object","keys","key","global","reloadAll","getRouteInfo","priority","routeInfo","routeInfoRoot","REACT_STATIC_DISABLE_ROUTE_PREFIXING","REACT_STATIC_SITE_ROOT","REACT_STATIC_PUBLIC_PATH","cacheBuster","REACT_STATIC_CACHE_BUST","getPath","add","prefetchData","fullData","Promise","all","sharedHashesByProp","map","hash","REACT_STATIC_ASSETS_PATH","prop","prefetchTemplate","templateIndex","Template","templateLoaded","preload","options","stop","start","getCurrentRoutePath","decodeURIComponent","window","location"],"mappings":"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","sourcesContent":["import axios from 'axios'\n//\nimport {\n  createPool,\n  getRoutePath,\n  pathJoin,\n  isPrefetchableRoute,\n} from './utils'\nimport onVisible from './utils/Visibility'\n\n// RouteInfo / RouteData\nexport const routeInfoByPath = {}\nexport const routeErrorByPath = {}\nexport const sharedDataByHash = {}\nconst inflightRouteInfo = {}\nconst inflightPropHashes = {}\n\nconst requestPool = createPool({\n  concurrency: Number(process.env.REACT_STATIC_PREFETCH_RATE),\n})\n\n// Plugins\nexport const plugins = []\n\n// Templates\nexport const templates = []\nexport const templateUpdated = { cb: () => {} }\nconst templateIndexByPath = {\n  '404': 0,\n}\nexport const templatesByPath = {\n  '404': templates[0],\n}\nexport const templateErrorByPath = {}\nexport const registerTemplates = tmps => {\n  templates.splice(0, Infinity, ...tmps)\n  templatesByPath['404'] = templates[0]\n  templateUpdated.cb()\n}\n\ninit()\n\n// When in development, init a socket to listen for data changes\n// When the data changes, we invalidate and reload all of the route data\nfunction init() {\n  // In development, we need to open a socket to listen for changes to data\n  if (process.env.REACT_STATIC_ENV === 'development') {\n    const io = require('socket.io-client')\n    const run = async () => {\n      try {\n        const {\n          data: { port },\n        } = await axios.get('/__react-static__/getMessagePort')\n        const socket = io(`http://localhost:${port}`)\n        socket.on('connect', () => {\n          console.log(\n            'React-Static data hot-loader websocket connected. Listening for data changes...'\n          )\n        })\n        socket.on('message', ({ type }) => {\n          if (type === 'reloadRoutes') {\n            reloadRouteData()\n          }\n        })\n      } catch (err) {\n        console.log(\n          'React-Static data hot-loader websocket encountered the following error:'\n        )\n        console.error(err)\n      }\n    }\n    run()\n  }\n\n  if (process.env.REACT_STATIC_DISABLE_PRELOAD === 'false') startPreloader()\n}\n\nfunction startPreloader() {\n  if (typeof document !== 'undefined') {\n    const run = () => {\n      const els = [].slice.call(document.getElementsByTagName('a'))\n      els.forEach(el => {\n        const href = el.getAttribute('href')\n        if (href) {\n          onVisible(el, () => {\n            prefetch(href)\n          })\n        }\n      })\n    }\n\n    setInterval(run, Number(process.env.REACT_STATIC_PRELOAD_POLL_INTERVAL))\n  }\n}\n\nexport function registerTemplateForPath(path, index) {\n  path = getRoutePath(path)\n  templateIndexByPath[path] = index\n  templatesByPath[path] = templates[index]\n}\n\nexport function reloadRouteData() {\n  // Delete all cached data\n  ;[\n    routeInfoByPath,\n    sharedDataByHash,\n    routeErrorByPath,\n    inflightRouteInfo,\n    inflightPropHashes,\n  ].forEach(part => {\n    Object.keys(part).forEach(key => {\n      delete part[key]\n    })\n  })\n  // Force each RouteData component to reload\n  global.reloadAll()\n}\n\nexport async function getRouteInfo(path, { priority } = {}) {\n  path = getRoutePath(path)\n\n  // Check if we should fetch RouteData for this url et all.\n  if (!isPrefetchableRoute(path)) {\n    return\n  }\n\n  // Check the cache first\n  if (routeInfoByPath[path]) {\n    return routeInfoByPath[path]\n  }\n\n  // Check for an error or non-existent static route\n  if (routeErrorByPath[path]) {\n    return\n  }\n\n  let routeInfo\n\n  try {\n    if (process.env.REACT_STATIC_ENV === 'development') {\n      // In dev, request from the webpack dev server\n      if (!inflightRouteInfo[path]) {\n        inflightRouteInfo[path] = axios.get(\n          `/__react-static__/routeInfo/${path === '/' ? '' : path}`\n        )\n      }\n      const { data } = await inflightRouteInfo[path]\n      routeInfo = data\n    } else {\n      // In production, fetch the JSON file\n      // Find the location of the routeInfo.json file\n      const routeInfoRoot =\n        (process.env.REACT_STATIC_DISABLE_ROUTE_PREFIXING === 'true'\n          ? process.env.REACT_STATIC_SITE_ROOT\n          : process.env.REACT_STATIC_PUBLIC_PATH) || '/'\n      const cacheBuster = process.env.REACT_STATIC_CACHE_BUST\n        ? `?${process.env.REACT_STATIC_CACHE_BUST}`\n        : ''\n      const getPath = `${routeInfoRoot}${pathJoin(\n        path,\n        'routeInfo.json'\n      )}${cacheBuster}`\n\n      // If this is a priority call bypass the queue\n      if (priority) {\n        const { data } = await axios.get(getPath)\n        routeInfo = data\n      } else {\n        // Otherwise, add it to the queue\n        if (!inflightRouteInfo[path]) {\n          inflightRouteInfo[path] = requestPool.add(() => axios.get(getPath))\n        }\n        const { data } = await inflightRouteInfo[path]\n        routeInfo = data\n      }\n    }\n  } catch (err) {\n    // If there was an error, mark the path as errored\n    routeErrorByPath[path] = true\n    return\n  }\n  if (!priority) {\n    delete inflightRouteInfo[path]\n  }\n  if (typeof routeInfo !== 'object' || !routeInfo.path) {\n    // routeInfo must have returned 200, but is not actually\n    // a routeInfo object. Mark it as an error and move on silently\n    routeErrorByPath[path] = true\n  } else {\n    routeInfoByPath[path] = routeInfo\n  }\n  return routeInfoByPath[path]\n}\n\nexport async function prefetchData(path, { priority } = {}) {\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path, { priority })\n\n  // Not a static route? Bail out.\n  if (!routeInfo) {\n    return\n  }\n\n  // Defer to the cache first. In dev mode, this should already be available from\n  // the call to getRouteInfo\n  if (routeInfo.fullData) {\n    return routeInfo.fullData\n  }\n\n  // Request and build the props one by one\n  routeInfo.fullData = {\n    ...(routeInfo.data || {}),\n  }\n\n  // Request the template and loop over the routeInfo.sharedHashesByProp, requesting each prop\n  await Promise.all(\n    Object.keys(routeInfo.sharedHashesByProp).map(async key => {\n      const hash = routeInfo.sharedHashesByProp[key]\n\n      // Check the sharedDataByHash first\n      if (!sharedDataByHash[hash]) {\n        // Reuse request for duplicate inflight requests\n        try {\n          // If priority, get it immediately\n          if (priority) {\n            const { data: prop } = await axios.get(\n              pathJoin(\n                process.env.REACT_STATIC_ASSETS_PATH,\n                `staticData/${hash}.json`\n              )\n            )\n            sharedDataByHash[hash] = prop\n          } else {\n            // Non priority, share inflight requests and use pool\n            if (!inflightPropHashes[hash]) {\n              inflightPropHashes[hash] = requestPool.add(() =>\n                axios.get(\n                  pathJoin(\n                    process.env.REACT_STATIC_ASSETS_PATH,\n                    `staticData/${hash}.json`\n                  )\n                )\n              )\n            }\n            const { data: prop } = await inflightPropHashes[hash]\n            // Place it in the cache\n            sharedDataByHash[hash] = prop\n          }\n        } catch (err) {\n          console.log(\n            'Error: There was an error retrieving a prop for this route! hashID:',\n            hash\n          )\n          console.error(err)\n        }\n        if (!priority) {\n          delete inflightPropHashes[hash]\n        }\n      }\n\n      // Otherwise, just set it as the key\n      routeInfo.fullData[key] = sharedDataByHash[hash]\n    })\n  )\n\n  // Return the props\n  return routeInfo.fullData\n}\n\nexport async function prefetchTemplate(path, { priority } = {}) {\n  // Clean the path\n  path = getRoutePath(path)\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path, { priority })\n\n  if (routeInfo) {\n    registerTemplateForPath(path, routeInfo.templateIndex)\n  }\n\n  // Preload the template if available\n  const Template = templatesByPath[path]\n  if (!Template) {\n    // If no template was found, mark it with an error\n    templateErrorByPath[path] = true\n    return\n  }\n  if (!routeInfo.templateLoaded && Template.preload) {\n    if (priority) {\n      await Template.preload()\n    } else {\n      await requestPool.add(() => Template.preload())\n    }\n    routeInfo.templateLoaded = true\n  }\n  return Template\n}\n\nexport async function prefetch(path, options = {}) {\n  // Clean the path\n  path = getRoutePath(path)\n\n  const { type } = options\n\n  // If it's priority, we stop the queue temporarily\n  if (options.priority) {\n    requestPool.stop()\n  }\n\n  let data\n  if (type === 'data') {\n    data = await prefetchData(path, options)\n  } else if (type === 'template') {\n    await prefetchTemplate(path, options)\n  } else {\n    ;[data] = await Promise.all([\n      prefetchData(path, options),\n      prefetchTemplate(path, options),\n    ])\n  }\n\n  // If it was priority, start the queue again\n  if (options.priority) {\n    requestPool.start()\n  }\n\n  return data\n}\n\nexport function getCurrentRoutePath() {\n  // If in the browser, use the window\n  if (typeof document !== 'undefined') {\n    return getRoutePath(decodeURIComponent(window.location.href))\n  }\n}\n"],"file":"index.js"}